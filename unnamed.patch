Index: src/chat02/MultiClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat02/MultiClient.java	(date 1570421666670)
+++ src/chat02/MultiClient.java	(date 1570421666670)
@@ -0,0 +1,35 @@
+package chat02;
+
+import java.io.*;
+import java.net.Socket;
+
+public class MultiClient {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost", 8888);
+        //创建键盘输入流
+        BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
+        DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+        DataInputStream dis = new DataInputStream(client.getInputStream());
+
+        boolean isRunning = true;
+        while (isRunning) {
+
+
+            String msg = console.readLine();
+            //客户端发送消息
+
+            dos.writeUTF(msg);
+            dos.flush();
+            //客户端接收消息
+
+            msg = dis.readUTF();
+            System.out.println(msg);
+        }
+
+        dos.close();
+        dis.close();
+        client.close();
+    }
+}
Index: .idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/uiDesigner.xml	(date 1570421666358)
+++ .idea/uiDesigner.xml	(date 1570421666358)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: src/chat03/MultiClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat03/MultiClient.java	(date 1570421991329)
+++ src/chat03/MultiClient.java	(date 1570421991329)
@@ -0,0 +1,35 @@
+package chat03;
+
+import java.io.*;
+import java.net.Socket;
+
+public class MultiClient {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost", 8888);
+        //创建键盘输入流
+        BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
+        DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+        DataInputStream dis = new DataInputStream(client.getInputStream());
+
+        boolean isRunning = true;
+        while (isRunning) {
+
+
+            String msg = console.readLine();
+            //客户端发送消息
+
+            dos.writeUTF(msg);
+            dos.flush();
+            //客户端接收消息
+
+            msg = dis.readUTF();
+            System.out.println(msg);
+        }
+
+        dos.close();
+        dis.close();
+        client.close();
+    }
+}
Index: src/chat03/MultiChart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat03/MultiChart.java	(date 1570421991357)
+++ src/chat03/MultiChart.java	(date 1570421991357)
@@ -0,0 +1,34 @@
+package chat03;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+public class MultiChart {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+
+        while (true) {
+            Socket client = server.accept();
+            System.out.println("一个Client建立了连接");
+
+
+            DataInputStream dis = new DataInputStream(client.getInputStream());
+            DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+            boolean isRunning = true;
+            while (isRunning) {
+                String msg = dis.readUTF();
+
+                dos.writeUTF(msg);
+                dos.flush();
+            }
+            dos.close();
+            dis.close();
+            client.close();
+        }
+
+    }
+}
Index: src/chat04/TMultiChat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat04/TMultiChat.java	(date 1570431915847)
+++ src/chat04/TMultiChat.java	(date 1570431915847)
@@ -0,0 +1,64 @@
+package chat04;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+public class TMultiChat {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+
+        while (true) {
+            Socket client = server.accept();
+            System.out.println("一个Client建立了连接");
+
+            new Thread(() -> {
+                DataInputStream dis = null;
+                DataOutputStream dos = null;
+                try {
+                    dis = new DataInputStream(client.getInputStream());
+                    dos = new DataOutputStream(client.getOutputStream());
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+                boolean isRunning = true;
+                while (isRunning) {
+                    try {
+                        String msg = dis.readUTF();
+                        dos.writeUTF(msg);
+                        dos.flush();
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                        isRunning = false;
+                    }
+                }
+
+                try {
+                    if (null == dos) {
+                        dos.close();
+                    }
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+                try {
+                    if (null == dis) {
+                        dis.close();
+                    }
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+                try {
+                    if (null == client) {
+                        client.close();
+                    }
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }).start();
+
+        }
+    }
+}
\ No newline at end of file
Index: src/chat04/TMultiClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat04/TMultiClient.java	(date 1570422930960)
+++ src/chat04/TMultiClient.java	(date 1570422930960)
@@ -0,0 +1,35 @@
+package chat04;
+
+import java.io.*;
+import java.net.Socket;
+
+public class TMultiClient {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost", 8888);
+        //创建键盘输入流
+        BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
+        DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+        DataInputStream dis = new DataInputStream(client.getInputStream());
+
+        boolean isRunning = true;
+        while (isRunning) {
+
+
+            String msg = console.readLine();
+            //客户端发送消息
+
+            dos.writeUTF(msg);
+            dos.flush();
+            //客户端接收消息
+
+            msg = dis.readUTF();
+            System.out.println(msg);
+        }
+
+        dos.close();
+        dis.close();
+        client.close();
+    }
+}
Index: src/chat05/TMultiClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat05/TMultiClient.java	(date 1570435514626)
+++ src/chat05/TMultiClient.java	(date 1570435514626)
@@ -0,0 +1,19 @@
+package chat05;
+
+import java.io.*;
+import java.net.Socket;
+
+public class TMultiClient {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost", 8888);
+
+        //客户端发送消息
+        new Thread(new Send(client)).start();
+
+        //客户端接收消息
+        new Thread(new Receive(client)).start();
+
+    }
+}
Index: src/chat05/TMultiChat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat05/TMultiChat.java	(date 1570433652988)
+++ src/chat05/TMultiChat.java	(date 1570433652988)
@@ -0,0 +1,79 @@
+package chat05;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+public class TMultiChat {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+
+        while (true) {
+            Socket client = server.accept();
+            System.out.println("一个Client建立了连接");
+
+            new Thread(new Channel(client)).start();
+        }
+    }
+
+    //一个客户代表一个Channel
+    static class Channel implements Runnable{
+        private DataInputStream dis;
+        private DataOutputStream dos;
+        private Socket client;
+        private  boolean isRunning;
+
+        public Channel(Socket client) {
+            this.client = client;
+            isRunning = true;
+            try {
+                dis = new DataInputStream(client.getInputStream());
+                dos = new DataOutputStream(client.getOutputStream());
+            } catch (IOException e) {
+                e.printStackTrace();
+                relese();
+            }
+        }
+
+        //接收消息
+        private String receive() {
+            String msg = "";
+            try {
+                msg = dis.readUTF();
+            } catch (IOException e) {
+                System.out.println("---接收异常");
+                relese();
+            }
+            return msg;
+        }
+
+        //发送消息
+        private void send(String msg) {
+            try{
+                dos.writeUTF(msg);
+                dos.flush();
+            }catch (IOException e){
+                System.out.println("---发送异常");
+                relese();
+            }
+        }
+
+        //释放资源
+        private void relese() {
+            this.isRunning = false;
+            Utils.close(dis, dos, client);
+        }
+        @Override
+        public void run(){
+            while (isRunning){
+                String msg = receive();
+                if(!msg.equals("")){
+                    send(msg);
+                }
+            }
+        }
+    }
+}
\ No newline at end of file
Index: src/chat05/Send.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat05/Send.java	(date 1570435514605)
+++ src/chat05/Send.java	(date 1570435514605)
@@ -0,0 +1,61 @@
+package chat05;
+
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.Socket;
+
+public class Send implements Runnable {
+    private BufferedReader console;
+    private DataOutputStream dos;
+    private Socket client;
+    private boolean isRunning;
+
+    public Send(Socket client) {
+        this.client = client;
+        this.isRunning = true;
+        console = new BufferedReader(new InputStreamReader(System.in));
+        try {
+            dos = new DataOutputStream(client.getOutputStream());
+        } catch (IOException e) {
+            System.out.println("===客户端发送异常");
+            this.relese();
+        }
+    }
+
+    private void relese() {
+        this.isRunning = false;
+        Utils.close(dos, client);
+    }
+
+    private String getStrFromConsole() {
+        try {
+            return console.readLine();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return "";
+    }
+
+    private void send(String msg) {
+        try {
+            dos.writeUTF(msg);
+            dos.flush();
+        } catch (IOException e) {
+            System.out.println("===客户端发送异常");
+            relese();
+        }
+    }
+
+
+    @Override
+    public void run() {
+        while (isRunning) {
+            String msg = getStrFromConsole();
+            if (!msg.equals("")) {
+                send(msg);
+            }
+        }
+    }
+}
Index: src/chat05/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat05/Utils.java	(date 1570433652965)
+++ src/chat05/Utils.java	(date 1570433652965)
@@ -0,0 +1,17 @@
+package chat05;
+
+import java.io.Closeable;
+
+public class Utils {
+    public static void close(Closeable... targets) {
+        for (Closeable target : targets) {
+            try {
+                if (null != target) {
+                    target.close();
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
Index: src/chat05/Receive.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat05/Receive.java	(date 1570435514616)
+++ src/chat05/Receive.java	(date 1570435514616)
@@ -0,0 +1,47 @@
+package chat05;
+
+import java.io.DataInputStream;
+import java.io.IOException;
+import java.net.Socket;
+
+
+public class Receive implements  Runnable {
+    private DataInputStream dis;
+    private Socket client;
+    private boolean isRunning;
+    public Receive(Socket client){
+        this.client = client;
+        this.isRunning = true;
+        try {
+            dis = new DataInputStream(client.getInputStream());
+        }catch (IOException e){
+            System.out.println("===客户端接收异常");
+            relese();
+        }
+    }
+    //接收消息
+    private String receive() {
+        String msg = "";
+        try {
+            msg = dis.readUTF();
+        } catch (IOException e) {
+            System.out.println("===接收异常");
+            relese();
+        }
+        return msg;
+    }
+    private void relese() {
+        this.isRunning = false;
+        Utils.close(dis, client);
+    }
+
+    @Override
+    public void run() {
+        while (isRunning){
+            String msg = receive();
+            if(!msg.equals("")){
+                System.out.println(msg);
+            }
+        }
+    }
+}
Index: src/chat06/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat06/Client.java	(date 1570437329739)
+++ src/chat06/Client.java	(date 1570437329739)
@@ -0,0 +1,25 @@
+package chat06;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.Socket;
+
+public class Client {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost", 8888);
+
+        BufferedReader br= new BufferedReader(new InputStreamReader(System.in));
+        System.out.println("请输入用户名：");
+        String name = br.readLine();
+
+        //客户端发送消息
+        new Thread(new Send(client,name)).start();
+
+        //客户端接收消息
+        new Thread(new Receive(client)).start();
+
+    }
+}
Index: src/chat06/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat06/Utils.java	(date 1570436474126)
+++ src/chat06/Utils.java	(date 1570436474126)
@@ -0,0 +1,17 @@
+package chat06;
+
+import java.io.Closeable;
+
+public class Utils {
+    public static void close(Closeable... targets) {
+        for (Closeable target : targets) {
+            try {
+                if (null != target) {
+                    target.close();
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
Index: src/chat06/oopChat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat06/oopChat.java	(date 1570451680516)
+++ src/chat06/oopChat.java	(date 1570451680516)
@@ -0,0 +1,107 @@
+package chat06;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+import java.util.concurrent.CopyOnWriteArrayList;
+
+public class oopChat {
+    private static CopyOnWriteArrayList<Channel> all = new CopyOnWriteArrayList<>();
+
+    public static void main(String[] args) throws IOException {
+
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+
+        while (true) {
+            Socket client = server.accept();
+            System.out.println("一个Client建立了连接");
+            Channel c = new Channel(client);
+            all.add(c);//管理所有的成员
+            new Thread(c).start();
+        }
+    }
+
+    //一个客户代表一个Channel
+    static class Channel implements Runnable {
+        private DataInputStream dis;
+        private DataOutputStream dos;
+        private Socket client;
+        private boolean isRunning;
+        private String name;
+
+        public Channel(Socket client) {
+            this.client = client;
+            isRunning = true;
+            try {
+                dis = new DataInputStream(client.getInputStream());
+                dos = new DataOutputStream(client.getOutputStream());
+                //获取名称
+                this.name = receive();
+                this.send("欢迎你的到来");
+                sendOthers(this.name + "进入了聊天室！", true);
+            } catch (IOException e) {
+                e.printStackTrace();
+                relese();
+            }
+        }
+
+        //接收消息
+        private String receive() {
+            String msg = "";
+            try {
+                msg = dis.readUTF();
+            } catch (IOException e) {
+                System.out.println("---接收异常");
+                relese();
+            }
+            return msg;
+        }
+
+        //发送消息
+        private void send(String msg) {
+            try {
+                dos.writeUTF(msg);
+                dos.flush();
+            } catch (IOException e) {
+                System.out.println("---发送异常");
+                relese();
+            }
+        }
+
+        //
+        private void sendOthers(String msg, boolean isSys) {
+            for (Channel other : all) {
+                if (other == this) {
+                    continue;
+                }
+                if (!isSys) {
+                    other.send(this.name + ":" + msg);
+                } else {
+                    other.send("系统消息:" + msg);
+                }
+            }
+        }
+
+        //释放资源
+        private void relese() {
+            this.isRunning = false;
+            Utils.close(dis, dos, client);
+            all.remove(this);
+            sendOthers(this.name + "离开了聊天室", true);
+        }
+
+        @Override
+        public void run() {
+            while (isRunning) {
+                String msg = receive();
+                if (!msg.equals("")) {
+                    //send(msg);
+                    sendOthers(msg, false);
+                }
+            }
+        }
+    }
+}
\ No newline at end of file
Index: src/chat06/Send.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat06/Send.java	(date 1570437329739)
+++ src/chat06/Send.java	(date 1570437329739)
@@ -0,0 +1,65 @@
+package chat06;
+
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.Socket;
+
+public class Send implements Runnable {
+    private BufferedReader console;
+    private DataOutputStream dos;
+    private Socket client;
+    private boolean isRunning;
+    private String name;
+
+    public Send(Socket client,String name) {
+        this.client = client;
+        this.isRunning = true;
+        this.name = name;
+        console = new BufferedReader(new InputStreamReader(System.in));
+        try {
+            dos = new DataOutputStream(client.getOutputStream());
+            //发送名称
+            send(name);
+        } catch (IOException e) {
+            System.out.println("===客户端发送异常");
+            this.relese();
+        }
+    }
+
+    private void relese() {
+        this.isRunning = false;
+        Utils.close(dos, client);
+    }
+
+    private String getStrFromConsole() {
+        try {
+            return console.readLine();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return "";
+    }
+
+    private void send(String msg) {
+        try {
+            dos.writeUTF(msg);
+            dos.flush();
+        } catch (IOException e) {
+            System.out.println("===客户端发送异常");
+            relese();
+        }
+    }
+
+
+    @Override
+    public void run() {
+        while (isRunning) {
+            String msg = getStrFromConsole();
+            if (!msg.equals("")) {
+                send(msg);
+            }
+        }
+    }
+}
Index: src/chat06/Receive.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat06/Receive.java	(date 1570436474126)
+++ src/chat06/Receive.java	(date 1570436474126)
@@ -0,0 +1,47 @@
+package chat06;
+
+import java.io.DataInputStream;
+import java.io.IOException;
+import java.net.Socket;
+
+
+public class Receive implements  Runnable {
+    private DataInputStream dis;
+    private Socket client;
+    private boolean isRunning;
+    public Receive(Socket client){
+        this.client = client;
+        this.isRunning = true;
+        try {
+            dis = new DataInputStream(client.getInputStream());
+        }catch (IOException e){
+            System.out.println("===客户端接收异常");
+            relese();
+        }
+    }
+    //接收消息
+    private String receive() {
+        String msg = "";
+        try {
+            msg = dis.readUTF();
+        } catch (IOException e) {
+            System.out.println("===接收异常");
+            relese();
+        }
+        return msg;
+    }
+    private void relese() {
+        this.isRunning = false;
+        Utils.close(dis, client);
+    }
+
+    @Override
+    public void run() {
+        while (isRunning){
+            String msg = receive();
+            if(!msg.equals("")){
+                System.out.println(msg);
+            }
+        }
+    }
+}
Index: src/chat07/Chat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat07/Chat.java	(date 1570518973022)
+++ src/chat07/Chat.java	(date 1570518973022)
@@ -0,0 +1,138 @@
+package chat07;
+
+import java.io.*;
+import java.net.ServerSocket;
+import java.net.Socket;
+import java.util.concurrent.CopyOnWriteArrayList;
+
+public class Chat {
+    private static CopyOnWriteArrayList<Channel> all = new CopyOnWriteArrayList<>();
+
+    public static void main(String[] args) throws IOException {
+
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+
+        while (true) {
+            Socket client = server.accept();
+            System.out.println("一个Client建立了连接");
+            Channel c = new Channel(client);
+
+            all.add(c);//管理所有的成员
+            new Thread(c).start();
+        }
+    }
+
+    //一个客户代表一个Channel
+    static class Channel implements Runnable {
+        private DataInputStream dis;
+        private DataOutputStream dos;
+        private Socket client;
+        private boolean isRunning;
+        private String name;
+        private OutputStreamWriter fwriter;
+
+        public Channel(Socket client) {
+            this.client = client;
+            isRunning = true;
+            try {
+
+                dis = new DataInputStream(client.getInputStream());
+                dos = new DataOutputStream(client.getOutputStream());
+                //获取名称
+                this.name = receiveName();
+                fwriter = new OutputStreamWriter(new FileOutputStream("D:\\test\\tolks_" + name + ".txt"));
+                this.send("欢迎你的到来");
+                sendOthers(this.name + "进入了聊天室！", true);
+
+            } catch (IOException e) {
+                e.printStackTrace();
+                relese();
+            }
+        }
+
+        //接收消息
+        private String receive() {
+            String msg = "";
+            try {
+                msg = dis.readUTF();
+
+                fwriter.write(msg + "\n");
+            } catch (IOException e) {
+                System.out.println("---接收异常");
+                relese();
+            }
+            return msg;
+        }
+
+        //接收客户端名字
+        private String receiveName() {
+            String msg = "";
+            try {
+                msg = dis.readUTF();
+            } catch (IOException e) {
+                System.out.println("---接收异常");
+                relese();
+            }
+            return msg;
+        }
+
+        //发送消息
+        private void send(String msg) {
+            try {
+                fwriter.write(msg + "\n");
+                dos.writeUTF(msg);
+                dos.flush();
+            } catch (IOException e) {
+                System.out.println("---发送异常");
+                relese();
+            }
+        }
+
+        private void sendOthers(String msg, boolean isSys) {
+            boolean isPrivate = msg.startsWith("@");
+            if (isPrivate) {    //私聊 格式为 @name:
+                int idx = msg.indexOf(":");
+                String targetName = msg.substring(1, idx);
+                msg = msg.substring(idx + 1);
+                for (Channel other : all) {
+                    if (other.name.equals(targetName)) {
+                        other.send(this.name + "私聊你:" + msg);
+                        break;
+                    }
+                }
+            } else {
+
+                for (Channel other : all) {
+                    if (other == this) {
+                        continue;
+                    }
+                    if (!isSys) {
+                        other.send(this.name + ":" + msg);
+                    } else {
+                        other.send("系统消息:" + msg);
+                    }
+                }
+            }
+        }
+
+
+        //释放资源
+        private void relese() {
+            this.isRunning = false;
+            Utils.close(dis, dos, fwriter, client);
+            all.remove(this);
+            sendOthers(this.name + "离开了聊天室", true);
+        }
+
+        @Override
+        public void run() {
+            while (isRunning) {
+                String msg = receive();
+                if (!msg.equals("")) {
+                    sendOthers(msg, false);
+                }
+            }
+        }
+    }
+}
\ No newline at end of file
Index: src/chat07/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat07/Client.java	(date 1570518973069)
+++ src/chat07/Client.java	(date 1570518973069)
@@ -0,0 +1,26 @@
+package chat07;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.Socket;
+
+public class Client {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost", 8888);
+
+        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
+        System.out.println("请输入用户名：");
+
+        String name = br.readLine();
+
+        //客户端发送消息
+        new Thread(new Send(client, name)).start();
+
+        //客户端接收消息
+        new Thread(new Receive(client)).start();
+
+    }
+}
Index: src/chat07/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat07/Utils.java	(date 1570438608356)
+++ src/chat07/Utils.java	(date 1570438608356)
@@ -0,0 +1,17 @@
+package chat07;
+
+import java.io.Closeable;
+
+public class Utils {
+    public static void close(Closeable... targets) {
+        for (Closeable target : targets) {
+            try {
+                if (null != target) {
+                    target.close();
+                }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
Index: src/chat07/Receive.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat07/Receive.java	(date 1570518973053)
+++ src/chat07/Receive.java	(date 1570518973053)
@@ -0,0 +1,51 @@
+package chat07;
+
+import java.io.DataInputStream;
+import java.io.IOException;
+import java.net.Socket;
+
+
+public class Receive implements Runnable {
+    private DataInputStream dis;
+    private Socket client;
+    private boolean isRunning;
+
+    public Receive(Socket client) {
+        this.client = client;
+        this.isRunning = true;
+
+        try {
+            dis = new DataInputStream(client.getInputStream());
+        } catch (IOException e) {
+            System.out.println("===客户端接收异常");
+            relese();
+        }
+    }
+
+    //接收消息
+    private String receive() {
+        String msg = "";
+        try {
+            msg = dis.readUTF();
+        } catch (IOException e) {
+            System.out.println("===接收异常--~");
+            relese();
+        }
+        return msg;
+    }
+
+    private void relese() {
+        this.isRunning = false;
+        Utils.close(dis, client);
+    }
+
+    @Override
+    public void run() {
+        while (isRunning) {
+            String msg = receive();
+            if (!msg.equals("")) {
+                System.out.println(msg);
+            }
+        }
+    }
+}
Index: src/chat07/Send.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat07/Send.java	(date 1570518973053)
+++ src/chat07/Send.java	(date 1570518973053)
@@ -0,0 +1,71 @@
+package chat07;
+
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.io.InputStreamReader;
+import java.net.Socket;
+
+public class Send implements Runnable {
+    private BufferedReader console;
+    private DataOutputStream dos;
+    private Socket client;
+    private boolean isRunning;
+    private String name;
+
+
+    public Send(Socket client, String name) {
+        this.client = client;
+        this.isRunning = true;
+        this.name = name;
+
+        console = new BufferedReader(new InputStreamReader(System.in));
+        try {
+            dos = new DataOutputStream(client.getOutputStream());
+            //发送名称
+            send(name);
+        } catch (IOException e) {
+            System.out.println("===客户端发送异常");
+            this.relese();
+        }
+    }
+
+    private void relese() {
+        this.isRunning = false;
+        Utils.close(dos, client);
+    }
+
+    private String getStrFromConsole() {
+        try {
+            String ss = console.readLine();
+
+            return ss;
+
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return "";
+    }
+
+    private void send(String msg) {
+        try {
+            dos.writeUTF(msg);
+            dos.flush();
+        } catch (IOException e) {
+            System.out.println("===客户端发送异常");
+            relese();
+        }
+    }
+
+
+    @Override
+    public void run() {
+        while (isRunning) {
+            String msg = getStrFromConsole();
+            if (!msg.equals("")) {
+                send(msg);
+
+            }
+        }
+    }
+}
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1570527112202)
+++ .idea/vcs.xml	(date 1570527112202)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: Talk.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Talk.iml	(date 1570420131052)
+++ Talk.iml	(date 1570420131052)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1570420131130)
+++ .idea/modules.xml	(date 1570420131130)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Talk.iml" filepath="$PROJECT_DIR$/Talk.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1570420131099)
+++ .idea/misc.xml	(date 1570420131099)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: src/chat01/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat01/Client.java	(date 1570421156708)
+++ src/chat01/Client.java	(date 1570421156708)
@@ -0,0 +1,27 @@
+package chat01;
+
+import java.io.*;
+import java.net.Socket;
+
+public class Client {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---client---");
+        //建立连接
+        Socket client = new Socket("localhost",8888);
+        //创建键盘输入流
+        BufferedReader console = new BufferedReader(new InputStreamReader(System.in));
+        String msg = console.readLine();
+        //客户端发送消息
+        DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+        dos.writeUTF(msg);
+        dos.flush();
+        //客户端接收消息
+        DataInputStream dis = new DataInputStream(client.getInputStream());
+        msg = dis.readUTF();
+        System.out.println(msg);
+
+        dos.close();
+        dis.close();
+        client.close();
+    }
+}
Index: src/chat01/Chart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat01/Chart.java	(date 1570421156724)
+++ src/chat01/Chart.java	(date 1570421156724)
@@ -0,0 +1,28 @@
+package chat01;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+public class Chart {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+        Socket client = server.accept();
+        System.out.println("一个Client建立了连接");
+
+
+        DataInputStream dis = new DataInputStream(client.getInputStream());
+        String msg = dis.readUTF();
+
+        DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+        dos.writeUTF(msg);
+        dos.flush();
+
+        dos.close();
+        dis.close();
+        client.close();
+    }
+}
Index: src/chat02/MultiChart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/chat02/MultiChart.java	(date 1570421692495)
+++ src/chat02/MultiChart.java	(date 1570421692495)
@@ -0,0 +1,30 @@
+package chat02;
+
+import java.io.DataInputStream;
+import java.io.DataOutputStream;
+import java.io.IOException;
+import java.net.ServerSocket;
+import java.net.Socket;
+
+public class MultiChart {
+    public static void main(String[] args) throws IOException {
+        System.out.println("---server---");
+        ServerSocket server = new ServerSocket(8888);
+        Socket client = server.accept();
+        System.out.println("一个Client建立了连接");
+
+
+        DataInputStream dis = new DataInputStream(client.getInputStream());
+        DataOutputStream dos = new DataOutputStream(client.getOutputStream());
+        boolean isRunning = true;
+        while (isRunning) {
+            String msg = dis.readUTF();
+
+            dos.writeUTF(msg);
+            dos.flush();
+        }
+        dos.close();
+        dis.close();
+        client.close();
+    }
+}
